{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","oscarwinners.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","name","prize","film","id","img","className","class","alt","src","CardList","oscarWinners","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","searchfilter","target","value","filteroscarWinners","filter","robot","toLowerCase","includes","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6eba4247.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({name, prize, id, film, img}) => {\r\n  return (\r\n\t<div className=\"edit tc dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t  <img class=\"crop\" alt={name} src={img} />\r\n\t  <div>\r\n\t  \t<h2>{name}</h2>\r\n\t  \t<p>{prize}</p>\r\n\t  \t<p>{film}</p>\r\n\t  </div>\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n\r\n// <img alt=\"Emane\" src={`https://robohash.org/${id}?200x200`} />","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({oscarWinners}) => {\r\n  return (\r\n  \t<div>\r\n\t  {\r\n\t  \toscarWinners.map((user, i) => {\r\n  \t      return (\r\n  \t        <Card \r\n  \t          key={oscarWinners[i].id} \r\n  \t          id={oscarWinners[i].id} \r\n  \t          name={oscarWinners[i].name} \r\n  \t          prize={oscarWinners[i].prize} \r\n              film={oscarWinners[i].film} \r\n              img={oscarWinners[i].img} \r\n  \t        />\r\n     \t  );\r\n        })\r\n\t  }\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n  \t<div className=\"pa2\">\r\n\t  <input\r\n\t  \tclassName=\"tc oscarB pa3\"\r\n\t    type=\"text\"  \r\n\t    placeholder=\"filter\"\r\n\t    onChange = {searchChange}\r\n\t  />\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n  \t<div style={{\r\n  \t\toverflowY: \"scroll\", \r\n  \t\theight: \"742px\",\r\n  \t}} >\r\n  \t  {props.children}\r\n  \t</div>\r\n  )\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n  constructor(props) {\r\n  \tsuper(props);\r\n  \tthis.state = {\r\n  \t  hasError: false\r\n  \t}\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n  \tthis.setState({hasError: true});\r\n  }\r\n\r\n  render() {\r\n  \tconst {hasError} = this.state;\r\n  \tif (hasError) {\r\n  \t\treturn <h1>Oops. Thats a shame bro</h1>\r\n  \t}\r\n  \treturn this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","export const oscarWinners = [\r\n  {\r\n    id: 1,\r\n    name: 'Joaquin Phoenix',\r\n    prize: '2019 - Best Actor',\r\n    film: 'Joker',\r\n    img: 'https://culto.latercera.com/wp-content/uploads/2020/02/phoenix-1.jpg'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'RenÃ©e Zellweger',\r\n    prize: '2019 - Best Actress',\r\n    film: 'Judy',\r\n    img: 'https://www.mundopeliculas.tv/wp-content/uploads/2020/02/renee-zellweger-oscar-2020-scaled.jpg'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Brad Pitt',\r\n    prize: '2019 - Best Supporting Actor',\r\n    film: 'Once Upon a Time in Hollywood',\r\n    img: 'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/brad-pitt-walks-the-red-carpet-ahead-of-the-ad-astra-news-photo-1568359675.jpg?crop=0.668xw:1.00xh;0.208xw,0&resize=640:*'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Laura Dern',\r\n    prize: '2019 - Best Actress',\r\n    film: 'Marriage Story',\r\n    img: 'https://e.an.amtv.pe/espectaculos-oscar-2020-laura-dern-gana-estatuilla-mejor-actriz-reparto-historia-matrimonio-n404936-612x408-651693.jpg'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Olivia Colman',\r\n    prize: '2018 - Best Actress',\r\n    film: 'The Favourite',\r\n    img: 'https://fotografias.lasexta.com/clipping/cmsimages01/2019/02/25/0E3C7BA4-846C-4EDD-978C-CE1B19902DC7/58.jpg'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Rami Malek',\r\n    prize: '2018 - Best Actor',\r\n    film: 'Bohemian Rhapsody',\r\n    img: 'https://www.metro951.com/wp-content/uploads/2019/02/D0OVySWXcAAYSIH.jpg'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Regina King',\r\n    prize: '2018 - Best Supporting Actress',\r\n    film: 'If Beale Street Could Talk',\r\n    img: 'https://www.lavanguardia.com/r/GODO/LV/p6/WebSite/2019/02/22/Recortada/1131909411_20190225021850824-ksNH-U46624893254RkC-992x558@LaVanguardia-Web.jpg'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Mahershala Ali',\r\n    prize: '2018 - Best Supporting Actor',\r\n    film: 'Green Book',\r\n    img: 'https://publimetro.pe/resizer/MjSEoJcmc2VL-4QidzAMj9bcIMI=/980x528/smart/arc-anglerfish-arc2-prod-elcomercio.s3.amazonaws.com/public/6LWED5JGJNFJVDO7SI2VVDWO7E.jpg'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Alf',\r\n    prize: '1995 - Best Actor',\r\n    film: 'Alf',\r\n    img: 'https://m.media-amazon.com/images/M/MV5BMTM5ODY4OTE5MV5BMl5BanBnXkFtZTgwODcxMTY1MTE@._V1_SY500_CR0,0,338,500_AL_.jpg'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Mel Gibson',\r\n    prize: '1995 - Best Supporting Actor',\r\n    film: 'Alf',\r\n    img: 'https://pbs.twimg.com/media/DMa9Y3rUEAI1r03.jpg'\r\n  }\r\n];\r\n","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport {oscarWinners} from '../oscarwinners.js';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n  \tsuper();\r\n  \tthis.state = {\r\n  \t  oscarWinners: [],\r\n      searchfilter: \"\"\t\r\n  \t};\r\n  }\r\n\r\n  componentDidMount() {\r\n  \t// fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n  \t//   .then(response => response.json())\r\n  \t//   .then(users => this.setState({OscarWinners: users}));\r\n    this.setState({oscarWinners: oscarWinners})\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n  \tthis.setState({searchfilter: event.target.value})\r\n  }\r\n\r\n  render() {\r\n    const {oscarWinners, searchfilter} = this.state;\r\n  \tconst filteroscarWinners = oscarWinners.filter(robot => {\r\n  \t\treturn robot.name.toLowerCase().includes(searchfilter.toLowerCase());\r\n  \t})\r\n  \treturn !oscarWinners.length ?\r\n  \t\t<h1 className=\"tc f1\">Loading...</h1> :\r\n  \t(\r\n      <div className=\"hola tc\">\r\n        <div className=\"sticky\">\r\n  \t      <h1 className=\"f1 mB\">OSCAR WINERS</h1>\r\n          <h1 className=\"f3 mB mT\">Best actors</h1>\r\n  \t      <SearchBox searchChange={this.onSearchChange} />\r\n        </div>\r\n        <ErrorBoundry>\r\n          <div className=\"xd\">\r\n            <Scroll>\r\n              <CardList oscarWinners={filteroscarWinners} />\r\n            </Scroll>\r\n          </div>\r\n        </ErrorBoundry>\r\n      </div>\r\n    );\r\n  }\t\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}